import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.Arrays;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

import org.junit.Test;

public class SolveOcrTest {
	@Test
	public void testDivideNinePeacesNull() {
		String[] ocrLines = ReaderOcr.readOcrFromFile();
		String[] peaces = SolveOcr.divideNinePeaces(ocrLines[0]);
		assertNotNull(peaces);
	}

	@Test
	public void testDivideNinePeacesSize() {
		String[] ocrLines = ReaderOcr.readOcrFromFile();
		String[] peaces = SolveOcr.divideNinePeaces(ocrLines[0]);

		assertTrue(peaces.length == 9);

	}

	@Test
	public void testDivideNinePeaces() {
		String[] ocrLines = ReaderOcr.readOcrFromFile();
		String[] peaces = SolveOcr.divideNinePeaces(ocrLines[0]);
		for (String s : peaces) {
			assertTrue(s.length() == 3);
		}
	}
	@Test
	public void testCutMethod(){
		PossibleNumbers pn = PossibleNumbersFactory.getInstance();
		SolveOcr.cut(pn," _ ",1);
		for(int)
	}
	
	private List<Integer> createList(Integer... integers) {
		List<Integer> list = Arrays.asList(integers);
		Collections.sort(list);
		return list;
	}
	private boolean assertMatchNumbers(List<Integer> exp, List<Integer> res) {
		for (int i = 0; i < exp.size(); i++) {
			assertEquals(exp.get(i), res.get(i));			
		}
		
	}
	
}
